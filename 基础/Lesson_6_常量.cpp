//
// Created by edy on 2022/7/5.
//

/*
 * 常量是固定值，在程序执行期间不会改变，这些固定值有叫做字面量。
 * 常量可以是任何基本数据类型，可分为整型数字，浮点数字，字符、字符串和布尔值。
 * 常量就像是常规的变量，只不过常量的值在定义后不能进行修改。
 *
 * 整数常量
 * 可以是十进制、八进制或十六进制。前缀指定基数：0x或0X表示十六进制，0表示八进制，不带前缀表示十进制。
 * 整数常量可以带一个后缀，后缀是U和L的组合，U表示无符号整数(unsigned)、L表示长整数(long)。可以大写或小写。顺序随意。
 * 以下是几个常量实例：
 * 212          合法
 * 212u         合法
 * 0xFeel       合法
 * 078          非法：8不是八进制的数字
 * 032UU        非法：不能重复同一个后缀U
 * 以下是各种类型的整数常量实例：
 * 85           十进制
 * 0213         八进制
 * 0x4b         十六进制
 * 30           整数
 * 30u          无符号整数
 * 30l          长整数
 * 30ul         无符号长整数
 *
 * 浮点常量
 * 由整数部分、小数点、小数部分和指数部分组成。可以使用小数形式和指数形式表示浮点常量。
 * 当使用小数形式表示时，必须包含整数部分、小数部分、或者同时包含俩者。
 * 当使用指数形式表示时，必须包含小数点、指数或同时包含俩者。
 * 带符号的指数用e或E引入。
 * 以下是几个浮点数常量的实例：
 * 3.1415926            合法
 * 314159E-5L           合法
 * 510E                 非法：不完整的指数
 * 210f                 非法：没有小数或指数
 * .e55                 非法：缺少整数或分数
 *
 *
 * 布尔常量
 * 布尔常量总共有俩个，它们都是标准的C++关键字：
 * true 值代表真
 * false 值代码假
 * 不应该把true的值看出1，false值看出0.
 *
 * 字符常量
 * 是包括在单引号中。如果常量以L(仅当大写时)开头，则表示它是一个宽字符常量(例如L'x')，此时必须存储在wchar_t类型变量中。
 * 否则，它就是一个窄字符串常量(例如'x')，此时它可以存在char类型变量中。
 * 字符常量可以是一个普通的字符(例如'x')，一个转义序列(例如'\t')，或一个通用的字符(例如'\u02CO')。
 * 在C++中，有一些特定的字符，当它们前面有反斜杠时就具有特殊含义，
 * 以下是一些常见转义序列码：
 * \\           \字符
 * \`           `字符
 * \"           "字符
 * \?           ?字符
 * \a           警报铃声
 * \b           退格键
 * \f           换页符
 * \n           换行符
 * \r           回车
 * \t           水平制表符
 * \v           垂直制表符
 * \ooo         一到三位的八进制数
 * \xhh         一个或多个数字的十六进制数
 *
 *
 * 字符串常量
 * 是包括在双引号中的。一个字符串常量类似于字符常量的字符：普通的字符、转义字符和通用字符。
 * 可以使用\做分割符，把一个很长的字符串常量进行分行。
 * 下面实例显示了一些字符串常量:
 */

#include "Lesson_6_常量.h"
#include <string>

int main1323() {
    string greeting = "hello, c++";
    cout << greeting;
    cout << "\n";
    string greeting2 = "lalla,\ "
                       "hi";
    cout << greeting2;
    return 0;
    /**
     * >>
     * hello, c++
     * lalla, hi
     */
}

/*
 * 定义常量
 * 在C++中，有俩种简单的定义常量的方式：
 * 使用 #define 预处理器。
 * 使用 const 关键字。
 *
 * #define 预处理器
 * 示例如下：
 * #define identifier value
 */

#define LENGTH 10
#define WIDTH 5
#define NEWLINE '\n'

int main1326() {
    int area;
    area = LENGTH * WIDTH;
    cout << area;
    cout << NEWLINE;
    return 0;
}

/*
 * const关键字如下所示
 * const type variable = value;
 */

int main1420() {
    const int LENGTH1 = 10;
    const int WIDTH1 = 5;
    const char NEWLINE1 = '\n';
    int area;

    area = LENGTH1 * WIDTH1;
    cout << area;
    cout << NEWLINE1;
    return 0;
}